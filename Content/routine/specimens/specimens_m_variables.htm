<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-gb" xml:lang="en-gb" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Routine|Specimens|MISPL functions" data-mc-priority="0" data-mc-time-estimate="0">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>Specimen.Variables</title>
        <link href="../../Resources/StyleSheets/shared.css" rel="stylesheet" type="text/css" />
        <script src="../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" defer="defer" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" defer="defer" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js" defer="defer" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" defer="defer" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js" defer="defer" type="text/javascript">
        </script>
    </head>
    <body>
        <h1>Specimen.Variables</h1>
        <p>Contents: <a href="#Introduction">Introduction</a> - <a href="#Usage">Usage</a></p>
        <h2><a name="Introduction"></a>Introduction</h2>
        <p>The MISPL method Specimen.Variable() allow to retrieve the variables of a
specimen.&#160; There several ways to do so.&#160; The different mechanisms are
described below.</p>
        <h2><a name="Usage"></a>Usage</h2>
        <h3>By name</h3>
        <p>This can be done by specifying the name of the MaterialVariable: e.g.
Specimen.Variable("Location")</p>
        <h3>Only the first variable</h3>
        <p>By specifying '?' it is possible to get the first variable that is attached
to that specimen, whatever its name is.</p>
        <h3>The n'th variable </h3>
        <p>The MISPL method Specimen.Variable() also allows you to get the n'th variable
of a specimen, even if you don't know the name of that variable or if the
variables are not always the same for each material.&#160; Just specify the
number (in quotes) instead of the name of the material variable.</p>
        <div class="text_box_examples" xmlns="http://www.w3.org/1999/xhtml">
            <p><span style="color: #003366; font-weight: bold;">Example</span>
            </p>
            <ul xmlns="">
                <li value="1">Specimen.Variable("2") will return the second variable that is
 available for that specimen.   &#160;&#160;</li>
                <li value="2">Specimen.Variable("1") will return the first variable: this is
 identical to Specimen.Variable(?).<br /></li>
                <li value="3">If there is a maximum of 3 variables for each material, the following will
 always list all the variables of the specimen:&#160;&#160;</li>
            </ul>
            <blockquote xmlns="">
                <p>Trim(&#160;<br />  ifknownstring( .Variable("1").Choice.Value() + " " ) +<br />  ifknownstring( .Variable("2").Choice.Value() + " " ) +<br />  ifknownstring( .Variable("2").Choice.Value() + " " ),<br />  " ")</p>
            </blockquote>
        </div>
        <p>Below is a text module that does the same more efficiently and that included
extra info:</p><pre>   {:
   integer n;
   string List;
   SpecimenVariable SpmnVar;</pre><pre>   List := "";
   n := 0;
   REPEAT
     n := n + 1;
     SpmnVar := .Variable( tostring( n,"%d") );
     List := List + IfKnownString(" " + SpmnVar.Choice.Value() + IfKnownString(" (" + SpmnVar.ExtraInfo + ")"));
   UNTIL n = 3;</pre><pre>   RETURN Trim( List, " " );
   }</pre>
        <div class="text_box_notes" xmlns="http://www.w3.org/1999/xhtml">
            <p><span style="color: #616E14; font-weight: bold;">Note</span>
            </p>
            <ul xmlns="">
                <li value="1">The sequence that is used is the sequence of the 'Seq.no.' field of the
 configured material variables.</li>
                <li value="2">Specimen.Variable("1") returns the first variable for the
 specimen, even if no value was chosen for it.</li>
                <li value="3">If the n'th variable returns '?', it means that there are no more
 variables left, so the n+1'th variable will also return '?'.</li>
            </ul>
        </div>
    </body>
</html>