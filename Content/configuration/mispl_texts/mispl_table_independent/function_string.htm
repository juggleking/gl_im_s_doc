<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-gb" xml:lang="en-gb" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="" data-mc-file-tags="Status.CheckedContent,Status.Restyled" data-mc-priority="0" data-mc-time-estimate="0" data-mc-id="v55\english\mispl-text\independent mispl functions\function_string.htm">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>String functions</title>
        <link href="../../../Resources/StyleSheets/shared.css" rel="stylesheet" type="text/css" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" defer="defer" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" defer="defer" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js" defer="defer" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" defer="defer" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js" defer="defer" type="text/javascript">
        </script>
    </head>
    <body>
        <h1><a name="Top"></a>String functions</h1>
        <table cellspacing="0" width="100%">
            <tr>
                <td style="vertical-align: top;width: 20%;padding-left: 0px;padding-top: 0px;padding-right: 0px;padding-bottom: 0px;">
                    <ul>
                        <li value="1"><a href="#Chr">Chr</a>
                        </li>
                        <li value="2"><a href="#Cpad">Cpad</a>
                        </li>
                        <li value="3"><a href="#Entry">Entry</a>
                        </li>
                        <li value="4"><a href="#Expand">Expand</a>
                        </li>
                        <li value="5"><a href="#ExtractTag">ExtractTag</a>
                        </li>
                        <li value="6"><a href="#_bm">Fill</a>
                        </li>
                    </ul>
                </td>
                <td style="vertical-align: top;width: 20%;padding-left: 0px;padding-top: 0px;padding-right: 0px;padding-bottom: 0px;">
                    <ul>
                        <li value="1"><a href="#FitText">FitText</a>
                        </li>
                        <li value="2"><a href="#IfKnownString">IfKnownString</a>
                        </li>
                        <li value="3"><a href="#Index">Index</a>
                        </li>
                        <li value="4"><a href="#Len">Len</a>
                        </li>
                        <li value="5"><a href="#Lookup">Lookup</a>
                        </li>
                        <li value="6"><a href="#Lpad">Lpad</a>
                        </li>
                    </ul>
                </td>
                <td style="vertical-align: top;width: 20%;padding-left: 0px;padding-top: 0px;padding-right: 0px;padding-bottom: 0px;">
                    <ul>
                        <li value="1"><a href="#Ltrim">Ltrim</a>
                        </li>
                        <li value="2"><a href="#Matches">Matches</a>
                        </li>
                        <li value="3"><a href="#NumEntries">NumEntries</a>
                        </li>
                        <li value="4"><a href="#Ord">Ord</a>
                        </li>
                        <li value="5"><a href="#PutTag">PutTag</a>
                        </li>
                        <li value="6"><a href="#RangeLabel">RangeLabel</a>
                        </li>
                    </ul>
                </td>
                <td style="vertical-align: top;width: 20%;padding-left: 0px;padding-top: 0px;padding-right: 0px;padding-bottom: 0px;">
                    <ul>
                        <li value="1"><a href="#RemoveEntry">RemoveEntry</a>
                        </li>
                        <li value="2"><a href="#Replace">Replace</a>
                        </li>
                        <li value="3"><a href="#Rpad">Rpad</a>
                        </li>
                        <li value="4"><a href="#Rtrim">Rtrim</a>
                        </li>
                        <li value="5"><a href="#Sort">Sort</a>
                        </li>
                        <li value="6"><a href="#Strip">Strip</a>
                        </li>
                    </ul>
                </td>
                <td style="vertical-align: top;width: 20%;padding-left: 0px;padding-top: 0px;padding-right: 0px;padding-bottom: 0px;">
                    <ul>
                        <li value="1"><a href="#Substr">Substr</a>
                        </li>
                        <li value="2"><a href="#ToLower">ToLower</a>
                        </li>
                        <li value="3"><a href="#ToUpper">ToUpper</a>
                        </li>
                        <li value="4"><a href="#Translate">Translate</a>
                        </li>
                        <li value="5"><a href="#TranslateCharacters">TranslateCharacters</a>
                        </li>
                        <li value="6"><a href="#Trim">Trim</a>
                        </li>
                        <li value="7"><a href="#XmlEscaped">XmlEscaped</a>
                        </li>
                    </ul>
                </td>
            </tr>
        </table>
        <p>Note: some of the MISPL functions below have a 'Delimiter' parameter.&#160;&#160;This 
 parameter can only be a single character.&#160;&#160;If more than 1 character 
 is specified, only the first one will be taken into account.</p>
        <h3><a name="Chr"></a>Chr <a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function converts OrdinalNumber to its corresponding single-character 
 string value in the active character set. If the ordinal number is in 
 the range of 0 to 255, Chr returns the corresponding single-character 
 string for the current character set. This string might not be printable 
 or might not display on certain terminals. The Chr function returns the 
 unknown value if the value is outside this range.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;padding-left: 2px;padding-top: 2px;padding-right: 2px;padding-bottom: 2px;"><i style="font-style: italic;">String</i> <b>Chr </b>(<i>Integer</i><span style="color: #008000;">OrdinalNumber</span>)</td>
                </tr>
            </table>
            <p><b style="font-weight: bold;">Examples:</b>
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 50%;">Return Chr(27); returns</td>
                    <td style="width: 50%;">the ESCAPE sign</td>
                </tr>
                <tr>
                    <td style="width: 50%;">Return Chr(65); returns</td>
                    <td style="width: 50%;">the ‘A’ character</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="Cpad"></a>Cpad<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function returns a string of length &lt;l&gt; formed from &lt;s&gt; 
 (center aligned) padded left and right with as many times string &lt;f&gt; 
 as needed.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String</i> <b>Cpad </b>(<i>String</i><span style="color: #008000;">s</span>, 
		 <i>Integer</i><span style="color: #008000;">l</span>, <i>String</i><span style="color: #008000;">f</span>)</td>
                </tr>
            </table>
            <p><b style="font-weight: bold;">Example:</b>
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 30%;">RETURN Cpad ("abc",10,"-"); 
		 returns</td>
                    <td style="width: 50%;">"----abc---"</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="Entry"></a>Entry<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function returns the entry at position Position from the Delimiter-delimited 
 List. If Position is less than 1 or larger than the number of elements, 
 the unknown value is returned. If delimiter is omitted (i.e. an empty 
 or unknown string is passed), the default is a comma.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">string</i> <b>Entry </b>(<i>Integer</i><span style="color: #008000;">Position</span>, 
		 <i>String</i><span style="color: #008000;">List</span>, <i>String</i> <span style="color: #008000;">Delimiter</span>)</td>
                </tr>
            </table>
&#160; 
</blockquote>
        <h3><a name="Expand"></a>Expand<b><a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></b></h3>
        <blockquote>
            <p>Sometimes the need arises to expand a dynamic text in a site function 
 or MISPL statement where the text is to be expanded on another table than 
 the original base table.&#160;&#160;You can use the Expand() MISPL function 
 to do so.</p>
            <table style="border-collapse: separate;border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String</i> <b>Expand</b><b></b>(&lt;TableName&gt;, &lt;RecordId&gt;, 
		 &lt;OriginalText&gt;, &lt;ParameterList&gt;)</td>
                </tr>
            </table>
            <p>Expands the dynamic text starting from the record as specified by TableName 
 and RecordId.&#160;</p>
            <p>&lt;TableName&gt; is only needed when the text actually contains a dynamic 
 part.&#160;<br />&lt;RecordId&gt; is only needed when the text includes MISPL statements.&#160;<br />&lt;ParameterList&gt; is needed when the dynamic text needs incoming parameters. 
 In this case, the parameter list syntaxt is "Tag=value\Tag=Value...".<br /><br />Example of use in action row label on a work list:<br /><br />...&#160;<br />Order comment: {= Expand("Order", .Order().Id, .Order().Description, 
 ?)}<br />...</p>
        </blockquote>
        <h3><a name="ExtractTag"></a>ExtractTag<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function extracts an entry from the tagged value list List.&#160;</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String</i> <b>ExtractTag </b>(<i>String</i><span style="color: #008000;">Tag</span>, 
		 <i>String</i><span style="color: #008000;">List</span>, <i>String</i> <span style="color: #008000;">Delimiter</span>)</td>
                </tr>
            </table>
            <p>A tagged value list has the following format:</p>
            <ul>
                <ul><pre>
&lt;Tag&gt;=&lt;StringValue&gt;{&lt;Delimitor&gt;&lt;Tag&gt;=&lt;StringValue&gt;}</pre>
                </ul>
            </ul>
            <p>Tags are case insensitive. The Delimiter should be a delimiter "character", 
 specified as a string with a value of one single character. Any superfluous 
 characters specified will be accepted but ignored. If the Delimiter is 
 omitted (i.e. an empty or unknown string is passed), it defaults to a 
 comma.</p>
        </blockquote>
        <h3>Fill<a href="#Top"><a name="_bm"></a><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function generates a character string by concatenating Source Repeats 
 times. If Repeats is less than or equal to 0, an empty string is produced.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String</i> <b>Fill </b>(<i>String</i><span style="color: #008000;">Source</span>, 
		 <i>Integer</i><span style="color: #008000;">Repeats</span>)</td>
                </tr>
            </table>
            <p><b style="font-weight: bold;">Examples:</b>
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 30%;">RETURN Fill("=",10); returns</td>
                    <td style="width: 50%;">"=========="</td>
                </tr>
                <tr>
                    <td style="width: 30%;">RETURN Fill("#=",10); returns</td>
                    <td style="width: 50%;">"#=#=#=#=#=#=#=#=#=#="</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="FitText"></a>FitText<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String</i> <b>FitText </b>(<i>String</i><span style="color: #008000;">InputString</span>, 
		 <i>Integer</i><span style="color: #008000;">Maxlinelength</span>, <i>String</i> <span style="color: #008000;">FirstPrefix</span>, <i>String</i><span style="color: #008000;">Prefix</span>, <i>String</i><span style="color: #008000;">Suffix</span>)</td>
                </tr>
            </table>
            <br />This function fits <span style="color: #008000;">InputString</span> in a column 
 of a given width of <span style="color: #008000;">Maxlinelength</span> by putting 
 extra newlines. Existing newline characters are not ignored.&#160;&#160;Each 
 line of the column is prefixed by <span style="color: #008000;">Prefix</span> 
 and suffixed by <span style="color: #008000;">Suffix</span>. 
<p>If no <span style="color: #008000;">FirstPrefix</span> is specified (value ?) 
 then the general <span style="color: #008000;">Prefix</span> is used for the first 
 line.&#160;&#160;If a <span style="color: #008000;">Suffix</span> is specified 
 (even if it is ""), blanks are added to each line so that each 
 line contains <span style="color: #008000;">MaxLineLength</span> characters and 
 so that the <span style="color: #008000;">Suffixes</span> are left aligned.&#160;&#160;If 
 the <span style="color: #008000;">FirstPrefix</span> exceeds <span style="color: #008000;">MaxLineLength</span>, 
 the &lt;unknown&gt; value is returned.</p><p><b style="font-weight: bold;">Example:</b></p><p>FitText("This MISPL-function fits an inputting text in columns 
 of a given width, by&#160;putting extra new lines. Each line of the column 
 can be prefixed and suffixed.",&#160;60, &#160;"[ Remark: ", 
 &#160;"[ &#160;&#160;", " ]")<br /><br />returns:</p><p><span style="font-family: Courier;">[ Remark: This MISPL-function 
 fits an inputting text in &#160;&#160;]<br />[ &#160;&#160;columns of a given width, by putting extra new lines. ]<br />[ &#160;&#160;Each line of the column can be prefixed and suffixed. ]</span></p></blockquote>
        <h3><a name="IfKnownString"></a>IfKnownString<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function returns its argument, or the empty string if the argument 
 contains the unknown value.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String</i> <b>IfKnownString </b>(<i>String</i><span style="color: #008000;">String</span>)</td>
                </tr>
            </table>
            <dl>
                <dt><span style="color: #008000;">String</span>&#160;</dt>
                <dd>String, to be checked for the unknown value.</dd>
            </dl>
        </blockquote>
        <h3><a name="Index"></a>Index<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function returns the position of the first occurrence of Target 
 within Source. The search is case-insensitive. If Target does not exist 
 within Source, 0 is returned. If Target is an empty string, 1 is returned.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">Integer</i> <b>Index </b>(<i>String</i><span style="color: #008000;">Source</span>, 
		 <i>String</i><span style="color: #008000;">Target</span>)</td>
                </tr>
            </table>
            <p><b style="font-weight: bold;">Examples:</b>
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 30%;">Index("Hb,Ht,MCV", "Ht"); 
		 returns</td>
                    <td style="width: 50%;">4</td>
                </tr>
                <tr>
                    <td style="width: 30%;">Index("Male,Female", "Female"); 
		 returns</td>
                    <td style="width: 50%;">6</td>
                </tr>
                <tr>
                    <td style="vertical-align: top;width: 30%;">Index("Female,Male", 
		 "Male"); returns&#160;</td>
                    <td style="vertical-align: top;width: 50%;">3 (The word 'Male' 
		 also occurs in the word 'female'.&#160;&#160;This example also 
		 demonstrates that this function is case-insensitive.)</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="Len"></a>Len<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function gets the length of a string.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">Integer</i> <b>Len </b>(<i>String</i><span style="color: #008000;">String</span>)</td>
                </tr>
            </table>
            <br />
            <p><b style="font-weight: bold;">Example:</b>
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 50%;">RETURN Len ("abcdefghijklmnopq");&#160;returns</td>
                    <td style="width: 50%;">17</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="Lookup"></a>Lookup<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function returns the position of Entry within the Delimiter-delimited 
 list List. The search is case-insensitive. If Entry does not appear in 
 the list, 0 is returned. The Delimiter should be a delimiter "character", 
 specified as a string with a value of one single character. Any superfluous 
 characters specified will be accepted but ignored. If the Delimiter is 
 omitted (i.e. an empty or unknown string is passed), it defaults to a 
 comma.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">Integer</i> <b>Lookup </b>(<i>String</i><span style="color: #008000;">Entry</span>, 
		 <i>String</i><span style="color: #008000;">List</span>, <i>String</i> <span style="color: #008000;">Delimiter</span>)</td>
                </tr>
            </table>
            <p><b style="font-weight: bold;">Examples:</b>
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 30%;">Lookup("Female", "Female,Male", 
		 ","); returns</td>
                    <td style="width: 50%;">1</td>
                </tr>
                <tr>
                    <td style="width: 30%;">Lookup("Male", "Female,Male", 
		 ","); returns</td>
                    <td style="width: 50%;">2</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="Lpad"></a>Lpad<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function returns a string of length &lt;l&gt; formed from &lt;s&gt; 
 (right aligned) padded to the right with as many times string &lt;f&gt; 
 as needed.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String&#160;</i>&#160;<b>Lpad 
		 </b>(<i>String</i><span style="color: #008000;">s</span>, <i>Integer</i> <span style="color: #008000;">l</span>, <i>String</i><span style="color: #008000;">f</span>):&#160;</td>
                </tr>
            </table>
            <p><b style="font-weight: bold;">Example:</b>
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 30%;">RETURN Lpad("abc",10,"="); 
		 returns</td>
                    <td style="width: 50%;">"abc======="</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="Ltrim"></a>Ltrim<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This functions removes leading white space, or other specified characters, 
 from Source. The Ltrim function is similar to the Trim function, except 
 that it trims characters only from the left end of the string. The function 
 is case-insensitive.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String</i> <b>Ltrim </b>(<i>String</i><span style="color: #008000;">Source</span>, 
		 <i>String</i><span style="color: #008000;">TrimCharacters</span>)</td>
                </tr>
            </table>
            <dl>
                <dt><span style="color: #008000;">TrimCharacters</span>:&#160;</dt>
                <dd>A character string that specifies the characters to be trimmed 
	 from Source. If you do not specify TrimCharacters, the Ltrim function 
	 removes all leading white space characters (i.e. spaces, tabs, linefeeds 
	 and carriage returns).</dd>
            </dl>
            <p><b style="font-weight: bold;">Example:</b>
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 50%;">return Ltrim ("&#160;&#160;&#160;&#160;&#160;&#160;&#160;abcdef"," 
		 "); returns&#160;</td>
                    <td style="width: 50%;">abcdef</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="Matches"></a>Matches<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function compares String to a regular expression Pattern and returns 
 YES if the expression satisfies the pattern criteria. If CaseSensitive 
 is set, the check is case-sensitive.&#160; </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">Logical</i> <b>Matches </b>(<i>String</i><span style="color: #008000;">String</span>, 
		 <i>String</i><span style="color: #008000;">Pattern</span>, <i>Logical</i> <span style="color: #008000;">CaseSensitive</span>)</td>
                </tr>
            </table>
            <div class="Section1">
	&#160;&#160;<br />	Examples:
	<p class="MsoNormal"><span><span style="font-size: 10pt;color: #000000;font-family: 'Courier New';">RETURN 
	 Matches(.InternalId, "000[0-9][0-9][0-9][0-9]", NO)&#160;&#160;&#160;/* 
	 [0-9] represents any digit */;</span></span></p><p>All .InternalId’s starting from 0000000 to 0009999 will return TRUE</p><p class="MsoNormal"><span><span style="font-size: 10pt;color: #000000;font-family: 'Courier New';">RETURN 
	 Matches(.InternalId, "000....", NO)&#160;&#160;/* . represents 
	 any character */</span></span></p><p>All .InternalId’s starting from 0000000 to 000ZZZZ will return TRUE</p></div>
        </blockquote>
        <div class="indented">
            <div class="text_box_notes">
                <p><span style="color: #616E14; font-weight: bold;">Note</span>
                </p>
                <p>Special characters like "(" or ")" need to be escaped by means of a "\" character.</p>
                <p>Example: RETURN Matches("test Neg (zie", "Neg \(z", No);</p>
            </div>
        </div>
        <h3><a name="NumEntries"></a>NumEntries<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function returns the number of entries in List.&#160;&#160;NumEntries 
 returns the number of Delimiter occurrences plus 1, and it returns 0 if 
 the list has zero length.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">Integer</i> <b>NumEntries </b>(<i>String</i><span style="color: #008000;">List</span>, 
		 <i>String</i><span style="color: #008000;">Delimiter</span>)</td>
                </tr>
            </table>
            <p>The Delimiter should be a delimiter "character", specified 
 as a string with a value of one single character. Any superfluous characters 
 specified will be accepted but ignored. If the Delimiter is omitted (i.e. 
 an empty or unknown string is passed), it defaults to a comma.</p>
            <p><b style="font-weight: bold;">Examples:</b>
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 30%;">RETURN NumEntries ("M,V", ","); 
		 returns</td>
                    <td style="width: 50%;">2</td>
                </tr>
                <tr>
                    <td style="width: 30%;">RETURN NumEntries ("A_B_C_D_E", 
		 "_"); returns</td>
                    <td style="width: 50%;">5</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="Ord"></a>Ord<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function convert the single character string String to the corresponding 
 ordinal number of the character in the active character set. The values 
 for string are case-sensitive. For example, Ord("a") returns 
 a different value than Ord("A"). If the string is not a single 
 character, Ord returns the unknown value.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">Integer</i> <b>Ord </b>(<i>String</i><span style="color: #008000;">String</span>)</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="PutTag"></a>PutTag<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function puts or replaces an entry in a tagged value list.&#160;</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String</i> <b>PutTag </b>(<i>String</i><span style="color: #008000;">Tag</span>, 
		 <i>String</i><span style="color: #008000;">StringValue</span>, <i>String</i> <span style="color: #008000;">List</span>, <i>String</i><span style="color: #008000;">Delimiter</span>)</td>
                </tr>
            </table>
            <p>A tagged value list has the following format:</p>
            <blockquote><pre>
&lt;Tag&gt;=&lt;StringValue&gt;{&lt;Delimitor&gt;&lt;Tag&gt;=&lt;StringValue&gt;}</pre>
            </blockquote>
            <p>Tags are case insensitive and have a maximum length of 64 characters.</p>
            <p>The Delimiter should be a delimiter "character", specified 
 as a string with a value of one single character. Any superfluous characters 
 specified will be accepted but ignored. If the Delimiter is omitted (i.e. 
 an empty or unknown string is passed), it defaults to a comma.</p>
        </blockquote>
        <h3><a name="RangeLabel"></a>RangeLabel<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function searches in which (numeric) range the TestValue is to 
 be situated, and returns the corresponding label. It is for instance used 
 for supplement calculation, where the supplement code depends of the total 
 sum of base values.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String</i> <b>RangeLabel </b>(<i>Fractional</i><span style="color: #008000;">TestValue</span>, 
		 <i>String</i><span style="color: #008000;">RangeList</span>)</td>
                </tr>
            </table>
            <dl>
                <dt><span style="color: #008000;">&#160;TestValue&#160;</span>
                </dt>
                <dd>Is a decimal&#160;</dd>
                <dt><span style="color: #008000;">&#160;RangeList&#160;</span>
                </dt>
                <dd>Is structured as follows "&lt;Range1Start&gt;:&lt;Label1&gt;,&lt;Range2Start&gt;:&lt;Lbl2&gt;,.."</dd>
            </dl>
        </blockquote>
        <h3><a name="RemoveEntry"></a>RemoveEntry<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function removes Count entries from List. Operation is based on 
 the convention that the number of entries equals the number of delimiters 
 plus 1.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String</i> <b>RemoveEntry </b>(<i>String</i><span style="color: #008000;">List</span>, 
		 <i>String</i><span style="color: #008000;">Delimiter</span>, <i>Integer</i> <span style="color: #008000;">Position</span>, <i>Integer</i><span style="color: #008000;">Count</span>)</td>
                </tr>
            </table>
            <dl>
                <dt><span style="color: #008000;">Delimiter</span>
                </dt>
                <dd>The Delimiter should be a delimiter "character", specified 
	 as a string with a value of one single character. Any superfluous 
	 characters specified will be accepted but ignored. If the Delimiter 
	 is omitted (i.e. an empty or unknown string is passed), it defaults 
	 to a comma.</dd>
                <dt><span style="color: #008000;">Position</span>
                </dt>
                <dd>Integer value (starting at 1) that indicates the position of the 
	 first character string entry you want to remove from the list. If 
	 Position is less than 1, the unknown value is returned. If it is beyond 
	 the end of the list, the list is returned unchanged. </dd>
                <dt><span style="color: #008000;">Count</span>
                </dt>
                <dd>If less than 0 or larger than the number of elements left, RemoveEntry 
	 removes all remaining entries from the specified position. </dd>
            </dl>
            <p><b style="font-weight: bold;">Example:</b>
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 70%;">RETURN RemoveEntry("abc,def,ghi,jkl,mno,pqr",",",2,2); 
		 returns</td>
                    <td style="width: 50%;">&#160;abc,jkl,mno,pqr</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="Replace"></a>Replace<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function returns a string with specified substring replacements. 
 The Replace function replaces all occurrences of FromString within Source. 
 After replacing a substring, the Replace function resumes searching after 
 the inserted text. Thus, the inserted text is not recursively searched 
 (in whole or in part) for FromString. The search for occurrences of FromString 
 within Source is case-insensitive.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String</i> <b>Replace </b>(<i>String</i><span style="color: #008000;">Source</span>, 
		 <i>String</i><span style="color: #008000;">FromString</span>, <i>String</i> <span style="color: #008000;">ToString</span>)</td>
                </tr>
            </table>
            <dl>
                <dt><span style="color: #008000;">Source</span>
                </dt>
                <dd>Specifies the base string to make replacements in.</dd>
                <dt><span style="color: #008000;">FromString</span>
                </dt>
                <dd>Specifies the substring to replace. Each occurrence of FromString 
	 within Source is replaced.</dd>
                <dt><span style="color: #008000;">ToString</span>
                </dt>
                <dd>Specifies the replacement substring. Each occurrence of FromString 
	 in Source is replaced by ToString.</dd>
            </dl>
            <p style="text-align: JUSTIFY;"><b style="font-weight: bold;">Example:</b>
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 50%;">RETURN Replace("jazzzanger","zzz","sh"); 
		 returns</td>
                    <td style="width: 50%;">jashanger</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="Rpad"></a>Rpad<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function returns a string of length &lt;l&gt; formed from &lt;s&gt; 
 (left aligned) padded to the left with as many times string &lt;f&gt; 
 as needed.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String</i> <b>Rpad </b>(<i>String</i><span style="color: #008000;">s</span>, 
		 <i>Integer</i><span style="color: #008000;">l</span>, <i>String</i><span style="color: #008000;">f</span>)</td>
                </tr>
            </table>
            <p style="text-align: JUSTIFY;"><b style="font-weight: bold;">Example:</b>
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 50%;">RETURN Rpad("abc",10," "); 
		 returns</td>
                    <td style="width: 50%;">"&#160;&#160;&#160;&#160;&#160;&#160;&#160;abc"</td>
                </tr>
            </table>
        </blockquote>
        <h3 style="text-align: JUSTIFY;"><a name="Rtrim"></a>Rtrim<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p style="text-align: JUSTIFY;">This function removes trailing white space, 
 or other specified characters, from Source. The Rtrim function is similar 
 to the Trim function, except that it trims characters only from the right 
 end of the string. The function is case-insensitive.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String 
		 </i><b>Rtrim </b>(<i>String </i><span style="color: #008000;">Source</span>, 
		 <i>String </i><span style="color: #008000;">TrimCharacters</span>)</td>
                </tr>
            </table>
            <dl>
                <dt><span style="color: #008000;">TrimCharacters</span>
                </dt>
                <dd>A character string that specifies the characters to be trimmed 
	 from Source. If you do not specify TrimCharacters, the Rtrim function 
	 removes all trailing whitespace characters (i.e. spaces, tabs, linefeeds 
	 and carriage returns).</dd>
            </dl>
            <p><b style="font-weight: bold;">Example:</b>
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 50%;">return Rtrim ("&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;abcdef&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"," 
		 ") ; returns</td>
                    <td style="width: 50%;">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;abcdef</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="Sort"></a>Sort<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>Alphabetically sort List. </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String 
		 </i><b>Sort </b>(<i>String </i><span style="color: #008000;">List</span>, 
		 <i>String </i><span style="color: #008000;">Delimiter</span>)</td>
                </tr>
            </table>
            <p>The function is case-insensitive. The Delimiter should be a delimiter 
 "character", specified as a string with a value of one single 
 character. Any superfluous characters specified will be accepted but ignored. 
 If the Delimiter is omitted (i.e. an empty or unknown string is passed), 
 it defaults to a comma.</p>
            <p><b style="font-weight: bold;">Example:</b>
                <br />
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 50%;">RETURN Sort("qq,sdf,ere,gfv,aab,aaab,pok,yhg,tfg",","); 
		 returns</td>
                    <td style="width: 50%;">&#160;aaab,aab,ere,gfv,pok,qq,sdf,tfg,yhg</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="Strip"></a>Strip<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function removes all characters occurring in StripCharacters from 
 Source. The function is case-insensitive. If you do not specify StripCharacters, 
 the Strip function removes all white space characters (i.e. spaces, tabs, 
 linefeeds and carriage returns).</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String 
		 </i><b>Strip </b>(<i>String </i><span style="color: #008000;">Source</span>, 
		 <i>String </i><span style="color: #008000;">StripCharacters</span>)</td>
                </tr>
            </table>
            <p><b style="font-weight: bold;">Example:</b>
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 50%;">RETURN Strip("jazzzanger","za"); 
		 returns</td>
                    <td style="width: 50%;">jnger</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="Substr"></a>Substr<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function extracts substring of Source, starting from Position, 
 with specified Length. If Length equals -1, all characters between Position 
 and the end of Source are returned.&#160;&#160;If Position exceeds the 
 number of characters available in the Source, an empty string will be 
 returned.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String 
		 </i><b>Substr</b> (<i>String </i><span style="color: #008000;">Source</span>, 
		 <i>Integer </i><span style="color: #008000;">Position</span>, <i>Integer 
		 </i><span style="color: #008000;">Length</span>)</td>
                </tr>
            </table>
            <p><b style="font-weight: bold;">Example:</b>
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 50%;">Substr("apple", 1, -1) returns</td>
                    <td style="width: 50%;">apple</td>
                </tr>
                <tr>
                    <td style="width: 50%;">Substr("abcdefghij",5,2) returns</td>
                    <td style="width: 50%;">ef</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="ToLower"></a>ToLower<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function converts any uppercase letters in Source to lowercase.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String 
		 </i><b>ToLower </b>(<i>String </i><span style="color: #008000;">Source</span>)</td>
                </tr>
            </table>
            <p><b style="font-weight: bold;">Example:</b>
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 30%;">RETURN ToLower("ABCDEF"); returns</td>
                    <td style="width: 50%;">"abcdef"</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="ToUpper"></a>ToUpper<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This function converts any lowercase letters in Source to uppercase.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String 
		 </i><b>ToUpper </b>(<i>String </i><span style="color: #008000;">Source</span>)</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="Translate"></a>Translate<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <p>This function returns the expansion of the text identified by TextId 
 in the language determined by LanguageName.&#160;&#160;Note that the related 
 text should not contain any embedded MISPL expressions !</p>
        <blockquote>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String 
		 </i><b>Translate </b>(<i>String </i><span style="color: #008000;">TextId</span>, 
		 <i>String</i><span style="color: #008000;">LanguageName</span>)</td>
                </tr>
            </table>
            <dl>
                <dt><span style="color: #008000;">TextId&#160;</span>
                </dt>
                <dd>Id of the text reference.&#160;&#160;Depends on the start table 
	 (see examples below).</dd>
                <dt><span style="color: #008000;">LanguageName&#160;</span>
                </dt>
                <dd>One of the language names defined in GLIMS.&#160;</dd>
            </dl>
            <p><b style="font-weight: bold;">Examples:</b>
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 25%;">Translate (.Expansion, "Nederlands")</td>
                    <td style="width: 25%;">Based on ResultCode table</td>
                </tr>
                <tr>
                    <td style="width: 25%;">Translate (.Label, "Deutsch")</td>
                    <td style="width: 25%;">Based on Material table</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="TranslateCharacters"></a>TranslateCharacters<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p>This case-sensitive function translates Source according to the specified 
 Inlist and Outlist.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String 
		 </i><b>TranslateCharacters </b>(<i>String </i><span style="color: #008000;">Source</span>, <i>String </i><span style="color: #008000;">Inlist</span>, 
		 <i>String </i><span style="color: #008000;">Outlist</span>)</td>
                </tr>
            </table>
            <dl>
                <dt><span style="color: #008000;">Source&#160;</span>
                </dt>
                <dd>Original string that will be translated according to Inlist and 
	 Outlist specifications&#160;</dd>
                <dt><span style="color: #008000;">Inlist&#160;</span>
                </dt>
                <dd>A character string containing the characters to be translated.&#160;</dd>
                <dt><span style="color: #008000;">OutList</span>&#160;</dt>
                <dd>A character string containing the translation of the characters. 
	 Input characters from InList will be replaced with the corresponding 
	 characters in OutList, or deleted if no corresponding character is 
	 specified.&#160;</dd>
            </dl>
            <p><i style="font-style: italic;">Note: If InList is larger than OutList, 
 the remaining characters of InList will be removed from the Source string. 
 If OutList is larger than InList, the remaining characters of OutList 
 will be ignored.</i>
            </p>
            <p><b style="font-weight: bold;">Examples</b>
            </p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 50%;">RETURN TranslateCharacters ("Banana_", 
		 "an_", "AN"); returns</td>
                    <td style="width: 50%;">BANANA</td>
                </tr>
                <tr>
                    <td style="width: 50%;">RETURN TranslateCharacters ("(arts)", 
		 "()", "[]" ); returns</td>
                    <td style="width: 50%;">[arts]</td>
                </tr>
            </table>
        </blockquote>
        <h3><a name="Trim"></a>Trim<a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a></h3>
        <blockquote>
            <p style="text-align: JUSTIFY;">This function removes leading and trailing 
 white space, or other specified characters, from Source. The function 
 is case-insensitive.</p>
            <table style="border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String 
		 </i><b>Trim </b>(<i>String </i><span style="color: #008000;">Source</span>, 
		 <i>String </i><span style="color: #008000;">TrimCharacters</span>)</td>
                </tr>
            </table>
            <dl>
                <dt><span style="color: #008000;">TrimCharacters</span>
                </dt>
                <dd>A character string that specifies the characters to be trimmed 
	 from Source. If you do not specify TrimCharacters, the Trim function 
	 removes all leading and trailing white space characters (i.e. spaces, 
	 tabs, linefeeds and carriage returns).</dd>
            </dl>
        </blockquote>
        <h3><a href="#Top"><img src="../arrow.jpg" alt="Top" width="14" height="14" align="right" border="0" /></a><a name="XmlEscaped"></a>XmlEscaped</h3>
        <blockquote>
            <p style="text-align: JUSTIFY;">This function escapes the reserved XML 
 characters (ampersand, less-than, greater-than, quote) from a string.</p>
            <table style="border-collapse: separate;border-collapse: separate;" cellspacing="0" width="90%" border="1">
                <tr>
                    <td style="width: 100%;"><i style="font-style: italic;">String 
		 </i><b>XmlEscaped </b>(<i>String </i><span style="color: #008000;">Source</span>)</td>
                </tr>
            </table>
            <dl>
                <dt><span style="color: #008000;">Source</span>
                </dt>
                <dd>A character string in which reserved XML characters should be escaped</dd>
            </dl>
        </blockquote>
        <p style="margin-left: 40px;">Example:</p>
        <p style="font-style: italic;margin-left: 80px;">OutputString := XmlEscaped("These 
 characters &#160;should be escaped: &amp;, &lt;, &gt;, "".");</p>
        <p style="margin-left: 40px;">will result in OutputString containing the 
 properly escaped text:</p>
        <p style="font-style: italic;margin-left: 80px;">These characters should 
 be escaped: &amp;amp;, &amp;lt;, &amp;gt;, &amp;quot;.</p>
    </body>
</html>