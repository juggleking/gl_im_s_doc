<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-gb" xml:lang="en-gb" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="" data-mc-file-tags="Status.CheckedContent,Status.Restyled" data-mc-priority="0" data-mc-time-estimate="0" data-mc-id="v55\english\mispl-text\syntax_re_01.htm">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>MISPL - Regular expressions</title>
        <link href="../../Resources/StyleSheets/shared.css" rel="stylesheet" type="text/css" />
        <script src="../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" defer="defer" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" defer="defer" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js" defer="defer" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" defer="defer" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js" defer="defer" type="text/javascript">
        </script>
    </head>
    <body>
        <h1>MISPL - Regular expressions</h1>
        <h2>Introduction</h2>
        <p>A regular expression (RE) specifies a set of character strings. A member of this
set of strings is said to be matched by the RE. It contains text characters (which match
the corresponding characters in the strings being compared) and operator characters (which
specify repetitions, choices and other features).</p>
        <p>Regular expressions are called 'regular' because they conform to a set of rules, as
listed in the following subsections.</p>
        <h2>Basic regular expressions</h2>
        <p>The following constructs are used to define regular expression primitives: 

</p>
        <ul>
            <li value="1">An ordinary character (not one of those discussed below) is a one-character RE that
 matches itself.</li>
            <li value="2">A backslash (\) makes the character following it lose its special RE properties, if it
 had any. The special characters are:</li>
            <li value="3">* (asterisk) as any character other than the first, ., [, \ (period, left square
 bracket, and backslash, respectively), which are always special, except when they appear
 within square brackets ([]).</li>
            <li value="4">^ (caret or circumflex), which is special at the beginning of an entire regular
 expression, or when it immediately follows the left of a pair of square brackets ([]).</li>
            <li value="5">$ (currency symbol), which is special at the end of an entire regular expression.</li>
            <li value="6">A period (.) is a one-character RE that matches any single character except the new line
 character.</li>
            <li value="7">
                <p>A non-empty string of characters enclosed in square brackets ([]) is a one-character RE
 that matches any single character in that string. If, however, the first character of the
 string is a circumflex (^), the one-character RE matches any character except the
 characters in the string and the new line character. The ^ has special meaning only if it
 occurs first in the string.<br />    A pair of characters separated by a minus (-) defines the set of characters collating
 between the specified lower and upper bounds; thus, for example, [a-z] as a
 regular expression matches any (single) lower-case letter. The - loses this special
 meaning if it occurs first (after an initial ^, if any) or last in the string.</p>
                <p>The right square bracket (]) does not terminate such a string when it is the first
 character within it (after an initial ^, if any). For example, []a-f] matches
 either a right square bracket (]) or one of the letters a through f inclusive.</p>
            </li>
        </ul>
        <h2><a name="Combining regular expression primitives"></a>Combining regular expression
primitives</h2>
        <p>The following rules may be used to construct compound regular expressions from
simple regular expressions: 

</p>
        <ul>
            <li value="1">The concatenation of regular expressions is a regular expression that matches the
 longest leftmost concatenation of the strings matched by each component of the regular
 expression.</li>
            <li value="2">A regular expression followed by an asterisk (*) is a regular expression that matches
 zero or more adjacent occurrences of the preceding regular expression. If there is any
 choice, the longest leftmost string that permits a match is chosen.</li>
            <li value="3">A simple regular expression followed by a plus sign (+) matches one or more occurrences
 of the simple RE that it follows.</li>
            <li value="4">A simple regular expression followed by a question mark (?) matches exactly one
 occurrence or zero occurrences of the simple RE that it follows (once or not at all).</li>
        </ul>
        <h2><a name="Making a compound regular expression simple"></a>Making a compound regular expression simple</h2>
        <p>Metacharacters that apply to the preceding RE, such as the plus sign, apply only to the preceding simple RE, not to an entire compound RE. By framing a compound RE, youcan make it behave like a simple RE so that a following metacharacter can act on it. You frame a RE by enclosing it in parentheses (()).Separating regular expressionsIt is often useful to be able to match two or more radically different RE's in asingle operation. To do so, separate the individual RE's by vertical bars (|).
</p>
        <h2><a name="Matching the beginning or end of a line"></a>Matching the beginning or end of a
line</h2>
        <p>Finally, an entire regular expression may be constrained to match only an initial
segment or final segment of a line (or both): 

</p>
        <ul>
            <li value="1">A circumflex (^) at the beginning of an entire regular expression constrains that
 regular expression to match an initial segment of a line.</li>
            <li value="2">A currency symbol ($) at the end of an entire regular expression constrains that regular
 expression to match a final segment of a line.</li>
        </ul>
        <p>The construction ^RE$ constrains the entire regular expression to match the entire
line.</p>
        <h2><a name="Summary"></a>Summary</h2>
        <p>Table 1 presents a summary of regular expression rules.</p>
        <div align="center">
            <center>
                <table border="1" cellspacing="1" bordercolor="#000000" cellpadding="7" width="537">
                    <tr>
                        <td width="28%" valign="TOP">Expression</td>
                        <td width="22%" valign="TOP">Name</td>
                        <td width="49%" valign="TOP">Rule</td>
                    </tr>
                    <tr>
                        <td width="28%" valign="TOP">0-9, A-Z, a-z<br />    most punctuation</td>
                        <td width="22%" valign="TOP">ordinary character</td>
                        <td width="49%" valign="TOP">Matches itself.</td>
                    </tr>
                    <tr>
                        <td width="28%" valign="TOP">\char</td>
                        <td width="22%" valign="TOP">backslash</td>
                        <td width="49%" valign="TOP">The character following the backslash, regardless of whether
 it is a RE metacharacter or not.</td>
                    </tr>
                    <tr>
                        <td width="28%" valign="TOP">.</td>
                        <td width="22%" valign="TOP">period (dot)</td>
                        <td width="49%" valign="TOP">Any single character except new line.</td>
                    </tr>
                    <tr>
                        <td width="28%" valign="TOP">[chars]</td>
                        <td width="22%" valign="TOP">brackets</td>
                        <td width="49%" valign="TOP">Any of the characters within the brackets.</td>
                    </tr>
                    <tr>
                        <td width="28%" valign="TOP">*</td>
                        <td width="22%" valign="TOP">asterisk</td>
                        <td width="49%" valign="TOP">Zero or more instances of the preceding RE.</td>
                    </tr>
                    <tr>
                        <td width="28%" valign="TOP">+</td>
                        <td width="22%" valign="TOP">plus sign</td>
                        <td width="49%" valign="TOP">One or more instances.</td>
                    </tr>
                    <tr>
                        <td width="28%" valign="TOP">?</td>
                        <td width="22%" valign="TOP">question mark</td>
                        <td width="49%" valign="TOP">Zero or one instances.</td>
                    </tr>
                    <tr>
                        <td width="28%" valign="TOP">^</td>
                        <td width="22%" valign="TOP">circumflex</td>
                        <td width="49%" valign="TOP">The beginning of a line when at the beginning of a RE. When
 used as the first character inside square brackets, excludes the bracketed characters from
 being matched.</td>
                    </tr>
                    <tr>
                        <td width="28%" valign="TOP">$</td>
                        <td width="22%" valign="TOP">dollar sign</td>
                        <td width="49%" valign="TOP">The end of the line when at the end of a RE.</td>
                    </tr>
                    <tr>
                        <td width="28%" valign="TOP">expr expr ...</td>
                        <td width="22%" valign="TOP">concatenation</td>
                        <td width="49%" valign="TOP">Forms a compound RE.</td>
                    </tr>
                    <tr>
                        <td width="28%" valign="TOP">(expr)</td>
                        <td width="22%" valign="TOP">parentheses</td>
                        <td width="49%" valign="TOP">Frames a compound RE, making it behave like a simple.</td>
                    </tr>
                    <tr>
                        <td width="28%" valign="TOP">|</td>
                        <td width="22%" valign="TOP">vertical bar</td>
                        <td width="49%" valign="TOP">Separates multiple REs.</td>
                    </tr>
                </table>
            </center>
        </div>
        <p align="CENTER"><b>Table 1: Regular expression rules summary</b>
        </p>
        <h2><a name="Examples"></a>Examples</h2>
        <p>The following table demonstrates the use of regular expressions.</p>
        <div align="center">
            <center>
                <table border="1" cellspacing="1" bordercolor="#000000" cellpadding="7" width="371">
                    <tr>
                        <td width="30%" valign="TOP">&#160;<p>Pattern</p></td>
                        <td width="70%" valign="TOP">Matches</td>
                    </tr>
                    <tr>
                        <td width="30%" valign="TOP">Abc</td>
                        <td width="70%" valign="TOP">abc</td>
                    </tr>
                    <tr>
                        <td width="30%" valign="TOP">[abc]</td>
                        <td width="70%" valign="TOP">a, b or c</td>
                    </tr>
                    <tr>
                        <td width="30%" valign="TOP">[a-z]</td>
                        <td width="70%" valign="TOP">a through z</td>
                    </tr>
                    <tr>
                        <td width="30%" valign="TOP">[A-Z0-9]</td>
                        <td width="70%" valign="TOP">A through Z and 0 through 9</td>
                    </tr>
                    <tr>
                        <td width="30%" valign="TOP">[^abc]</td>
                        <td width="70%" valign="TOP">All characters except a, b or c (and new line)</td>
                    </tr>
                    <tr>
                        <td width="30%" valign="TOP">a?</td>
                        <td width="70%" valign="TOP">Zero or one occurrences of a</td>
                    </tr>
                    <tr>
                        <td width="30%" valign="TOP">a+</td>
                        <td width="70%" valign="TOP">One or more occurrences of a</td>
                    </tr>
                    <tr>
                        <td width="30%" valign="TOP">a*</td>
                        <td width="70%" valign="TOP">Zero or more occurrences of a</td>
                    </tr>
                    <tr>
                        <td width="30%" valign="TOP">(ab)*</td>
                        <td width="70%" valign="TOP">Zero or more occurrences of ab</td>
                    </tr>
                    <tr>
                        <td width="30%" valign="TOP">\+</td>
                        <td width="70%" valign="TOP">+</td>
                    </tr>
                    <tr>
                        <td width="30%" valign="TOP">a\.b</td>
                        <td width="70%" valign="TOP">a.b</td>
                    </tr>
                    <tr>
                        <td width="30%" valign="TOP">.</td>
                        <td width="70%" valign="TOP">Any single character (except new line)</td>
                    </tr>
                    <tr>
                        <td width="30%" valign="TOP">.*</td>
                        <td width="70%" valign="TOP">Zero or more characters (except new line)</td>
                    </tr>
                    <tr>
                        <td width="30%" valign="TOP">a|b</td>
                        <td width="70%" valign="TOP">a or b</td>
                    </tr>
                    <tr>
                        <td width="30%" valign="TOP">ab|ac</td>
                        <td width="70%" valign="TOP">ab or ac</td>
                    </tr>
                    <tr>
                        <td width="30%" valign="TOP">a(bc)?</td>
                        <td width="70%" valign="TOP">a or abc</td>
                    </tr>
                    <tr>
                        <td width="30%" valign="TOP">a[bc]d(ef)?</td>
                        <td width="70%" valign="TOP">abd, abdef, acd or acdef</td>
                    </tr>
                </table>
            </center>
        </div>
        <p align="CENTER"><b>Table 2: Basic pattern examples</b>
        </p>
    </body>
</html>