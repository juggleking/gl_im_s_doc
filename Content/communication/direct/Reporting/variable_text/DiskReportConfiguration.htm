<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-gb" xml:lang="en-gb" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Communication|Direct communication|Result reporting|Variable text reports" data-mc-priority="0" data-mc-time-estimate="0" data-mc-id="v55\english\communication\disk_reports\DiskReportConfiguration.htm">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>Variable text reporting</title>
        <meta name="ProgId" content="FrontPage.Editor.Document" />
        <link href="../../../../Resources/StyleSheets/shared.css" rel="stylesheet" type="text/css" />
        <script src="../../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js" defer="defer" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js" defer="defer" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js" defer="defer" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js" defer="defer" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAll.js" defer="defer" type="text/javascript">
        </script>
    </head>
    <body>
        <h1>Variable text reporting</h1>
        <h2>Introduction</h2>
        <p>Variable text reports can be used to manually define the content and 
structure of electronic reports.&#160; An example could be a customized disk 
report.&#160; For variable text reports, the report template field "Generator" 
must be set to "Variable text".&#160; The content is defined in report temple 
fields documented below.&#160; The "Electronic" page of the report generation 
screen allows to define how these reports should be outputted.</p>
        <h2>Currently supported "Report template" fields</h2>
        <ul>
            <li class="kadov-p" value="1">
	Main 
	
	<ul><li class="kadov-p" value="1">
		Property Classification 
		
		<ul><li class="kadov-p" value="1">Label</li><li class="kadov-p" value="2">Property</li><li class="kadov-p" value="3">
			Main 
			
			<ul><li class="kadov-p" value="1">Base table for Label expression</li></ul></li><li class="kadov-p" value="4">
			Report 
			
			<ul><li class="kadov-p" value="1">Reportable</li><li class="kadov-p" value="2">Report condition</li></ul></li></ul></li></ul></li>
            <li class="kadov-p" value="2">
	Layout 
	
	<ul><li class="kadov-p" value="1">Result mark</li></ul></li>
            <li class="kadov-p" value="3">
	Texts 
	
	<ul><li class="kadov-p" value="1">FirstPageHeader</li><li class="kadov-p" value="2">Header</li><li class="kadov-p" value="3">Body</li><li class="kadov-p" value="4">Footer</li><li class="kadov-p" value="5">Trailer</li><li class="kadov-p" value="6">Empty result text</li></ul></li>
            <li class="kadov-p" value="4">
	Conversions 
	
	<ul><li class="kadov-p" value="1">Property id set</li><li class="kadov-p" value="2">Unit id set</li><li class="kadov-p" value="3">MicroOrganism id set</li></ul></li>
            <li class="kadov-p" value="5">
	Microbiology 
	
	<ul><li class="kadov-p" value="1">Isolation comment text</li><li class="kadov-p" value="2">Antibiotic result</li></ul></li>
        </ul>
        <h2>Supported fields usage</h2>
        <h3>ReportTemplate.FirstPageHeader</h3>
        <p>Multilingual text module: 
 Base Table: Report</p>
        <p>This header will be placed only once before all reported data in the 
 report file (file header). Typically, a new report will be created for 
 each different Report.Target, so this header could contain some protocol 
 specific data and the Report.Target data.</p>
        <p><b>Examples:</b>
        </p>
        <ul>
            <li class="kadov-p" value="1">Medidoc</li>
        </ul>
        <blockquote>
            <p><i>O901<br />Mips Laboratorium<br />Industriepark Zwijnaarde 3A<br />9000 Gent<br />Belgium<br />+ 32 9 220 21 23<br />{= DateToString(Today(),"%y%m%d") }<br />{= if .Target.Type = StringToEnumerated("CorrespondentType", 
 "HCProvider")<br />&#160;&#160;&#160; then ifKnownString(.Target.HCProvider().Code)<br />&#160;&#160;&#160; else "" }<br />{= Substr(.Target.HCProvider().LastName + FILL(" ", 24), 1, 24) 
 } {=Substr(.Target.HCProvider().FirstName, 1, 16) }</i>
            </p>
        </blockquote>
        <h3>ReportTemplate.Header</h3>
        <p>Multilingual text module: 
 Base Table: Report</p>
        <p>This header will be placed before each order being reported in the report 
 file. Typically, this is the order + patient data.</p>
        <p><b>Examples:</b>
        </p>
        <ul>
            <li class="kadov-p" value="1">Health One</li>
        </ul>
        <blockquote>
            <p><i>A1\{= .Order.InternalId}\Mips Laboratorium<br /><br />A2\{= .Order.InternalId + "\" +<br />IfKnownString(.Object.Person().Lastname) + "\" +<br />IfKnownString(.Object.Person().FirstName) + "\" +<br />IfKnownString(.Object.PersonData("Sex")) + "\" +<br />IfKnownString(DateTostring(.object.person().Birthdate,"%d%m%y")) 
 + "\" }<br /><br />A3\{= .Order.InternalId + "\" +<br />IfKnownString(.Object.PersonData("AddressLine1")) + "\" 
 +<br />IfKnownString(.Object.PersonData("PostalCode")) + "\" 
 +<br />IfKnownString(.Object.PersonData("MunicipalityName")) + "\" 
 }<br /><br />A4\{= .Order.InternalId + "\" + .Target.Name + "\" 
 +<br />IfKnownString(DateTimeTostring(.Order.ReceiptTime,"%d%m%y")) 
 + "\\\C"}<br /><br />A5\{= .Order.InternalId + "\" +<br />IfKnownString(.Order.ObjectPaymentAgreement().Fund.Mnemonic) + "\" 
 +<br />ifKnownString(.Order.ObjectPaymentAgreement().Matriculation) + "\" 
 +<br />if .Order.ObjectPaymentAgreement().Relation = StringToEnumerated("RelationType", 
 "Holder")<br />then ("0" + "\" + IfKnownString(.Object.Person().Correspondent.Name))<br />else if .Order.ObjectPaymentAgreement().Relation = stringToEnumerated("RelationType", 
 "Spouse")<br />then ("1" + "\" +<br />IfKnownString(.Order.ObjectPaymentAgreement().Container.Party.Name))<br />else if .Order.ObjectPaymentAgreement().Relation = stringToEnumerated("RelationType", 
 "Descendent")then ("2" + "\" +<br />IfKnownString(.Order.ObjectPaymentAgreement().Container.Party.Name))<br />else if .Order.ObjectPaymentAgreement().Relation = stringToEnumerated("RelationType", 
 "Ascendent")<br />then ("3" + "\" +<br />IfKnownString(.Order.ObjectPaymentAgreement().Container.Party.Name))<br />else ("\") }\</i>
            </p>
        </blockquote>
        <ul>
            <li class="kadov-p" value="1">Medidoc</li>
        </ul>
        <blockquote>
            <p><i>#A{= .Object.Person().CalculateMedidocCaseNumber() 
 }<br />{= Substr(.Object.Person().LastName + FILL(" ", 24), 1, 24) } 
 {=Substr(.Object.Person().FirstName, 1, 16) }<br />{= DateTostring(.object.person().Birthdate,"%y%m%d")}<br />{= if EnumeratedToString("Sex", .Object.Person().Sex) = "Female" 
 then "Y"<br />&#160;&#160;&#160; else if EnumeratedToString("Sex", .Object.Person().Sex) 
 = "Male" then "X" else "Z" }<br />{= DateTostring(Today(),"%y%m%d")}<br />{= Substr(.Order.InternalId, 1, 14) }<br />&amp;ProtocolCode<br />{= Substr(ifKnownString(.Object.PersonData("AddressLine1")), 
 1, 32) }<br />{= Substr(ifKnownString(.Object.PersonData("PostalCode")), 1, 
 7) }<br />{= Substr(ifKnownString(.Object.PersonData("MunicipalityName")), 
 1, 24) }</i>
            </p>
        </blockquote>
        <p><b>Medidoc specific:</b>
            <br />Creation of the 'Medidoc patient case number' via Mispl : <i>'.Order.Object.Person().CalculateMedidocCaseNumber()</i>'.<br />The '<i>&amp;ProtocolCode</i>' variable will be substituted by 'C' (Complete 
 Report) or 'P' (Partial Report).</p>
        <h3><a name="ReportTemplate.Body"></a>ReportTemplate.Body</h3>
        <p>Multilingual text module: 
 Base Table: temp-table w_Result</p>
        <p>This body MISPL expression will be evaluated for each report being generated. 
 It is only applicable for 'VariableText' reports ! All other 'Disk' Reports 
 will not use this expression.</p>
        <p>The 'Result section' data should contain all Results for the Order formatted 
 by the 'Body' MISPL.</p>
        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a style="font-weight: bold; color: #003366" href="javascript:void(0)" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="13" width="16" alt="Closed" data-mc-alt2="Open" />Example 1</a></span>
            <div class="MCDropDownBody dropDownBody">
                <div class="text_box_examples">
                    <ul>
                        <li class="kadov-p" value="1">VariableText report: Health One clone</li>
                    </ul>
                    <blockquote>
                        <p style="text-align: left;" align="left"><i>{=<br />if .Type = StringToEnumerated("ObservationalResultType", "Label")<br />&#160;&#160;&#160; then ("L1\" + .OrderInternalId + "\" 
 + .Value + "\\\\")<br />&#160;&#160;&#160; else if .Type = StringToEnumerated("ObservationalResultType", 
 "Result")<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; then ("L1\" + .OrderInternalId 
 + "\" + .Mnemonic + "\" + IfKnownString(.Description) 
 +<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 
 "\" + IfKnownString(.Reference) + "\" + IfKnownString(.UnitName) 
 + "\" + <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 
 IfKnownString(.Mark) + "\" + IfKnownString(.Value))</i>
                        </p>
                        <p><i>else if .Type = StringToEnumerated("ObservationalResultType", 
 "Isolation")<br />&#160;&#160;&#160; then (<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; if .SubId = ? then ("L1\" 
 + .OrderInternalId + "\Bacter\Culture\\\C\" +IfKnownString(.Value))<br />&#160;&#160;&#160; else ("L1\" + .OrderInternalId + "\Bacter\Culture\\\C\" 
 + IfKnownString(.Description) + " : " +<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; IfKnownString(.Value) 
 + " (" + IntegerToString(.SubId, "%d") + ")"))</i>
                        </p>
                        <p><i>else if .Type = StringToEnumerated("ObservationalResultType", 
 "Antibiotic")<br />then (<br />&#160;&#160;&#160; if .SubId = ? then ("L1\" + .OrderInternalId 
 + "\Bacter\Antibiogram\\\C\" + IfKnownString(.Value))<br />&#160;&#160;&#160; else (<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; (if .SubId = 1<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; then ("L1\" + .OrderInternalId 
 + "\Bacter\Antibiogram\\\C\" + <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 
 Fill(" ", 16) + "(1) (2) (3) (4)&lt;BR&gt;" + "&amp;ReportLineSeqNo:04d") 
 else "") +<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ("L1\" 
 + .OrderInternalId + "\Bacter\Antibiogram\\\C\" + Lpad(.Mnemonic, 
 14, " ") + " : " + <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 
 IfKnownString(Entry(1, ExtractTag("RIS", .Value, "\"), 
 ",")) +" " + <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 
 IfKnownString(Entry(2, ExtractTag("RIS", .Value,"\"), 
 ",")) + " " + <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 
 IfKnownString(Entry(3, ExtractTag("RIS", .Value, "\"), 
 ",")))))<br />else ""<br />}</i>
                        </p>
                    </blockquote>
                    <p><b>Field Description:</b>
                    </p>
                    <ul>
                        <li class="kadov-p" value="1">Id : unique id</li>
                        <li class="kadov-p" value="2">
	SubId: the .SubId variable is used to indicate whether or not the current 
 result is a sub result. 
	
	<ul><li class="kadov-p" value="1">Culture: The .SubId is used to distinguish the 
 Isolations from one another. The .SubId will start at 1 and will be incremented 
 for each result with .Type = Isolation.<br /><br />		Caution: when the .SubId is '?', there are no Isolations or the 
 Isolation.Appraisal may not yet be reported (e.g. may only be reported 
 when confirmed but having a lower status - Report.MinimalResultStatus). 
 If the microbiology research was negative, the .Value field will contain 
 the reason why, otherwise the Result Empty Result text will be displayed.</li><li class="kadov-p" value="2">Antibiogram: Again, the .SubId is used to distinguish 
 all Antibiotics.<br />		If the .SubId = '?, then there is no antibiogram yet. This could 
 be the case when no antibiogram was requested or it may be that it may 
 not yet be reported. In this case, .Value can be reported once (will contain 
 the empty result text).<br />		SubId = 1: first antibiotic, start of the antibiogram.<br />		Now we wish to write a line e.g. ....\C\ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 
 (1) &#160;&#160;&#160;&#160;&#160;&#160;&#160; (2) ..... - check out the 
 MISPL above and the example below.<br /><br />		The .Value will contain the RIS and MIC values in the format '<i>RIS=X1,Y2,Z3\MIC=X2,Y2,Z3</i>' 
 with X1 and X2 the RIS- and MICValue for Isolation 1, etc. . The RIS value 
 should be extracted and written at the correct place in the report being 
 generated. The .Value will also contain the E-test and Agar values.</li></ul></li>
                        <li class="kadov-p" value="3">Type : Label, Result, Isolation or Antibiotic</li>
                        <li class="kadov-p" value="4">Order : Order reference</li>
                        <li class="kadov-p" value="5">Request : Request reference</li>
                        <li class="kadov-p" value="6">Result : Result reference</li>
                        <li class="kadov-p" value="7">Isolation : Isolation reference when type = Isolation</li>
                        <li class="kadov-p" value="8">AntibioticResult : AntibioticResult reference when 
 type = Antibiotic</li>
                        <li class="kadov-p" value="9">Antibiotic : Antibiotic reference when type = Antibiotic</li>
                        <li class="kadov-p" value="10">
	Mnemonic 
	
	<ul><li class="kadov-p" value="1">Result : Property.Mnemonic or Property.Identification.Code 
 if a Property Identification exists for the set specified at the ReportTemplate.</li><li class="kadov-p" value="2">Isolation : MicroOrganism.Mnemonic or MicroOrganism.Identification.Code 
 if a MicroOrganism Identification exists for the set specified at the 
 ReportTemplate.</li><li class="kadov-p" value="3">Antibiotic : Antibiotic.Mnemonic</li></ul></li>
                        <li class="kadov-p" value="11">Description :</li>
                        <li value="12">
                            <ul>
                                <li class="kadov-p" value="1">Result : Property.Description</li>
                                <li class="kadov-p" value="2">Isolation : MicroOrganism.Description</li>
                                <li class="kadov-p" value="3">Antibiotic : Antibiotic.Description</li>
                            </ul>
                        </li>
                        <li class="kadov-p" value="13">
	Value 
	
	<ul><li class="kadov-p" value="1">Label : the label</li><li class="kadov-p" value="2">Result&#160; : its value</li><li class="kadov-p" value="3">Isolation : Appraisal</li><li class="kadov-p" value="4">Antibiotic : RIS and MIC values, format '<i>RIS=X1,..,Yn\MIC=X2,..,Yn</i>', 
 where 1,...,n are the Isolations with SubId 1,...,n.</li></ul></li>
                        <li class="kadov-p" value="14">
	UnitName, UnitDescription : 
	
	<ul><li class="kadov-p" value="1">Result : The unit in which the value and references 
 limits are calculated. Be ware, UnitName can be the Unit Identification.Code 
 if a Unit Id Set is specified for the ReportTemplate. If the Property 
 unit has no Unit Identification but its baseunit has, then the value will 
 be reported in that baseunit and the UnitName will be the BaseUnit Identification 
 Code.</li></ul></li>
                        <li class="kadov-p" value="15">
	LowLimit, HighLimit, References 
	
	<ul><li class="kadov-p" value="1">Result : reference values</li></ul></li>
                        <li class="kadov-p" value="16">
	Urgency 
	
	<ul><li class="kadov-p" value="1">Result : its urgency</li></ul></li>
                        <li class="kadov-p" value="17">ObjectTime : result object in format 'YYYYMMDDHHMMSS'.</li>
                        <li class="kadov-p" value="18">
	Status 
	
	<ul><li class="kadov-p" value="1">Result : result status</li></ul></li>
                        <li class="kadov-p" value="19">
	Comment : 
	
	<ul><li class="kadov-p" value="1">Result : External comment</li></ul></li>
                        <li class="kadov-p" value="20">Mark : Result Mark (ReportTemplate.ResultMark)</li>
                        <li class="kadov-p" value="21">New : Is this a new result</li>
                        <li class="kadov-p" value="22">Correction : Is this a corrected result</li>
                        <li class="kadov-p" value="23">Dynamic : Is this a dynamic type result ?</li>
                        <li class="kadov-p" value="24">OrderInternalId : The internal id of the order</li>
                    </ul>
                    <p>e.g. in the end, we should have something like this (generated by MISPL):</p>
                    <p><span style="font-family: 'Courier New';">0000A1\20000705-00009\Mips Laboratorium<br />0001A2\20000705-00009\\\\\<br />0002A3\20000705-00009\\\\<br />0003A4\20000705-00009\Faber Hendrik\050700\\\C<br />0004A5\20000705-00009\\\\\<br />0005L1\20000705-00009\Informational\\\\<br />0006L1\20000705-00009\Height\\\\<br />0007L1\20000705-00009\Height\Height\50-220\cm\\100<br />0008L1\20000705-00009\Detailed report information\\\\<br />0009L1\20000705-00009\Chemistry\\\\<br />0010L1\20000705-00009\na\Sodium\0.00\micro mol/l medi\++\&lt;100000<br />0011L1\20000705-00009\K Medi\Potassium\0.\micro mol/l medi\\<br />0012L1\20000705-00009\Cl medi\Chloride\0.\micro mol/l medi\\<br />0013L1\20000705-00009\O901AAIA\Magnesium\0.\micro mol/l medi\\<br />0014L1\20000705-00009\O901AAOA\HDL-Cholesterol\0\micro mol/l medi\\<br />0015L1\20000705-00009\O901AATA\Triglycerides\0\micro mol/l medi\\<br />0016L1\20000705-00009\O901AAKA\Cholesterol\0\micro mol/l medi\++\100000<br />0017L1\20000705-00009\O901AASA\LDL-Cholesterol\0.\micro mol/l medi\++\Triglyceriden 
 &gt; 5<br />0018L1\20000705-00009\ALP\Alkal. Phos.\\mg/100ml\\<br />0019L1\20000705-00009\Haematology\\\\<br />0020L1\20000705-00009\O901AAJA\White blood cells\4500-5500\x10^9/l\++\10<br />0021L1\20000705-00009\RBC\Red blood cells\\x10^9/l\\<br />0022L1\20000705-00009\Special panels\\\\<br />0023L1\20000705-00009\O901AAJA\White blood cells\4500-5500\x10^9/l\++\10<br />0024L1\20000705-00009\Microbiology\\\\<br />0025L1\20000705-00009\Material: M_Wound\\\\<br />0026L1\20000705-00009\Cultuur:\\\\<br />0027L1\20000705-00009\Bacter\Culture\\\C\E. Coli : +++ (1)<br />0028L1\20000705-00009\Bacter\Culture\\\C\Aspergillus : - (2)<br />0029L1\20000705-00009\Bacter\Antibiogram\\\C\ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 
 (1) (2) (3) (4)<br />0030L1\20000705-00009\Bacter\Antibiogram\\\C\Isoniazide&#160;&#160;&#160; 
 : - &#160;&#160; R <br />0031L1\20000705-00009\Bacter\Antibiogram\\\C\Rifampicine&#160;&#160; : 
 -&#160;&#160; S <br />0032L1\20000705-00009\Bacter\Antibiogram\\\C\Gentamycin&#160;&#160;&#160; 
 : R &#160;&#160; I <br />0033L1\20000705-00009\Bacter\Antibiogram\\\C\ethambutol&#160;&#160;&#160; 
 : - &#160;&#160; I <br />0034L1\20000705-00009\Bacter\Antibiogram\\\C\Streptomycine : -&#160;&#160; 
 R <br />0035L1\20000705-00009\Bacter\Antibiogram\\\C\Temocilin&#160;&#160;&#160;&#160; 
 : S &#160;&#160; - <br />0036L1\20000705-00009\Bacter\Antibiogram\\\C\Cefazolin&#160;&#160;&#160;&#160; 
 : I &#160;&#160; - <br />0037L1\20000705-00009\Dynamic tests\\\\<br />0038L1\20000705-00009\cluc\Glucose\3500-5500\micro mol/l medi\\<br />0039L1\20000705-00009\cluc\Glucose\3500-5500\micro mol/l medi\++\20000<br />0040L1\20000705-00009\cluc\Glucose\3500-5500\micro mol/l medi\++\30000<br />0041L1\20000705-00009\cluc\Glucose\3500-5500\micro mol/l medi\++\40000<br />0042END.</span>
                    </p>
                    <p>p.s. To make things easier, it is possible to call text modules from 
 within text modules. And a text module can contain a MISPL expression 
 where variables can be used.</p>
                    <p>e.g.</p>
                    <p><i>{= .Mnemonic<br />{:<br />string Value;<br />Value := Entry(3, ExtractTag("RIS", .Value, "\"), ",");<br /><br />return Value:<br />}<br />}</i>
                    </p>
                    <p>is the same as:</p>
                    <p><i>{= .Mnemonic {&lt; GetValue} }</i>
                        <br />
                        <br />where the Text module GetValue is defined as:</p>
                    <p><i>{:<br />string Value;<br />Value := Entry(3, ExtractTag("RIS", .Value, "\"), ",");<br /><br />return Value:<br />}</i>
                    </p>
                    <p><b>Remark:</b>
                    </p>
                    <p>All tests will be reported as the Property Classification predicts.</p>
                    <p><b>VariableText report specific:</b>
                    </p>
                    <p style="margin-left: 40px;">It is possible to add line numbers before 
 each line reported in the file. This can be done by placing a variable 
 '&amp;ReportLineSeqNo:04d' as a placeholder for the line number. This 
 variable will be replaced afterwards by the correct line number. The ':04d' 
 stands for the format. This variable can also be specified in the FirstPageheader, 
 Header, Footer and Trailer.</p>
                    <p style="margin-left: 40px;">04 : 4 digits wide prefixed by '0'.<br />d : decimal</p>
                    <p style="margin-left: 40px;">e.g.&#160; <i>{="&amp;ReportLineSeqNo:04d" 
 + "A1\" + ..... }</i></p>
                    <p style="margin-left: 40px;font-style: normal;font-weight: bold;"><i><span style="font-style: normal;">Extra 
 formatting</span></i>
                    </p>
                    <p style="margin-left: 40px;">You can add formatting to this variable (only 
 for numeric format 'd').</p>
                    <p style="margin-left: 80px;">&amp;ReportLineSeqNo:04+1d -&gt; + offset 
 1 -&gt; the calculated value is always increased with 1<span style="margin-left: 40px;"><br />&amp;ReportLineSeqNo:04-5d -&gt; - offset 5 -&gt; the calculated value 
 is always decreased with 5</span></p>
                    <p style="margin-left: 40px;">This applies to all 'Variable text' generators, 
 for all available 'numeric' variables (format 'd'). &#160;If 
 the line number would be negative, the following will happen with the 
 variable '&amp;ReportLineSeqNo:04-3d':</p>
                    <p style="margin-left: 80px;">-003/20021104-00001/...<span style="margin-left: 40px;"><br />-002/20021104-00001/...<br />-001/20021104-00001/...<br />0000/20021104-00001/...<br />0001/20021104-00001/...</span></p>
                </div>
            </div>
        </div>
        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a style="font-weight: bold; color: #003366" href="javascript:void(0)" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="13" width="16" alt="Closed" data-mc-alt2="Open" />Example 2</a></span>
            <div class="MCDropDownBody dropDownBody">
                <div class="text_box_examples">
                    <p>The following MISPL expression can also be used: <a href="DiskReportConfiguration_body_text_module.txt">body_text_module</a>.</p>
                </div>
            </div>
        </div>
        <h3>ReportTemplate.Footer</h3>
        <p>Multilingual text module: 
 Base Table: Report</p>
        <p>This trailer will be placed after each order being generated in the 
 report file. </p>
        <p><b>Examples:</b>
        </p>
        <ul>
            <li class="kadov-p" value="1">Medidoc</li>
        </ul>
        <blockquote>
            <p><i>#A/</i>
            </p>
        </blockquote>
        <h3>ReportTemplate.Trailer</h3>
        <p>Multilingual text module: 
 Base Table: Report</p>
        <p>This trailer will be placed after al reported data in the report file 
 (file trailer).</p>
        <p><b>Examples:</b>
        </p>
        <ul>
            <li class="kadov-p" value="1">Health One</li>
        </ul>
        <blockquote>
            <p><i>END</i>
            </p>
        </blockquote>
        <ul>
            <li class="kadov-p" value="1">Medidoc</li>
        </ul>
        <blockquote>
            <p><i>#/&amp;TotalLineCount</i>
            </p>
        </blockquote>
        <p><b>Medidoc specific:</b>
            <br />The '<i>&amp;TotalLineCount</i>' variable will be substituted by the 
 amount of lines written in the Report file.</p>
    </body>
</html>